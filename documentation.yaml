swagger: "2.0"
info:
  version: "1.0.0"
  title: "BudgetBonsai API"
paths:
  /api/expenses:
    get:
      summary: "Get all transactions"
      description: "Retrieves all transactions for the authenticated user, sorted by date in descending order."
      produces:
        - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TransactionType"
        401:
          description: "Unauthorized"
    post:
      summary: "Add a new transaction"
      description: "Adds a new transaction for the authenticated user."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "transaction"
          description: "The transaction object to be added"
          required: true
          schema:
            $ref: "#/definitions/TransactionType"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/TransactionType"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
    put:
      summary: "Update a transaction"
      description: "Updates an existing transaction for the authenticated user."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "The ID of the transaction to be updated"
          required: true
          type: "string"
        - in: "body"
          name: "transaction"
          description: "The transaction object with the updated fields"
          required: true
          schema:
            $ref: "#/definitions/TransactionType"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionType"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
    delete:
      summary: "Delete a transaction"
      description: "Deletes an existing transaction for the authenticated user."
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "The ID of the transaction to be deleted"
          required: true
          type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
definitions:
  TransactionType:
    type: "object"
    required:
      - "name"
      - "amount"
      - "type"
      - "currency"
      - "date"
      - "category"
    properties:
      name:
        type: "string"
        minLength: 1
      amount:
        type: "number"
        minimum: 0
      type:
        type: "string"
        enum:
          - "expense"
          - "income"
      currency:
        type: "string"
        minLength: 1
      date:
        type: "string"
        format: "date-time"
      category:
        type: "string"
        minLength: 1
